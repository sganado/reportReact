{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport enLocale from \"date-fns/locale/es\";\nimport { getReport } from '../api/reportes';\nexport default function useForm(initialValues) {\n  _s();\n\n  const [inputs, setInputs] = useState(initialValues);\n  const [paciente_edad, setPaciente_edad] = React.useState([1, 100]);\n  const [paciente_ingreso_from, handleDateFROMchange] = React.useState(null);\n  const [paciente_ingreso_to, handleDateTOchange] = React.useState(null);\n  const [preload, setPreload] = React.useState(false);\n  const [clinicaStemi_tipoTiempoID, handleDateTimeChangeID] = React.useState(null);\n  const [clinicaStemi_tipoTiempoPC, handleDateTimeChangePC] = React.useState(null);\n  const [clinicaStemi_tipoTiempoLlS, handleDateTimeChangeLlS] = React.useState(null);\n  const [reportesApply, setReportesApply] = React.useState(true);\n  const [procedimiento_fecha_procedimiento, handleDateTimeChangeProcedimiento] = React.useState(null);\n  const [expanded, setExpanded] = React.useState({\n    paciente: true,\n    antecedentes: false,\n    factoresRiesgos: false,\n    clinica: false,\n    datosAngio: false,\n    lesiones: false,\n    procedimiento: false,\n    complicacionesSala: false,\n    stent: false,\n    reportes: false\n  });\n  const [localeMap] = React.useState({\n    es: enLocale\n  });\n  const [locale] = React.useState(\"es\");\n\n  function valuetext(value) {\n    return value;\n  }\n\n  const handleChangeEdad = (e, data) => {\n    setPaciente_edad(data);\n    e.preventDefault();\n  };\n\n  const handleSubmit = async event => {\n    let paciente = {};\n    let antecedentes = null;\n    let factoresRiesgos = null;\n    let cuadroClinico = {};\n    let clinicaScasest = {};\n    let clinicaStemi = {};\n    let datos_angio = {};\n    let lesiones = {};\n    let procedimiento = {};\n    let stent = {};\n    let form = {};\n    paciente = {\n      edad: {\n        from: paciente_edad[0],\n        to: paciente_edad[1]\n      },\n      sexo: inputs.paciente_sexo,\n      ingreso: {\n        from: paciente_ingreso_from === null ? '1970-01-01' : new Date(paciente_ingreso_from).toISOString().slice(0, 10),\n        to: paciente_ingreso_to === null ? new Date().toISOString().slice(0, 10) : new Date(paciente_ingreso_to).toISOString().slice(0, 10)\n      }\n    }; //Antecedentes\n\n    if (inputs.antecedente_EPOC) antecedentes.push(\"epoc\");\n    if (inputs.antecedente_ACV) antecedentes.push(\"acv\");\n    if (inputs.antecedente_AIT) antecedentes.push(\"ait\");\n    if (inputs.antecedente_ATC) antecedentes.push(\"atc_previa\");\n    if (inputs.antecedente_CRM) antecedentes.push(\"crm_previa\");\n    if (inputs.antecedente_FA) antecedentes.push(\"fa\");\n    if (inputs.antecedente_HTP) antecedentes.push(\"htp\");\n    if (inputs.antecedente_IAM) antecedentes.push(\"iam_previo\");\n    if (inputs.antecedente_IRC) antecedentes.push(\"irce\");\n    if (inputs.antecedente_MCPH) antecedentes.push(\"mio_hiper\"); //Factores de riesgo\n\n    if (inputs.factor_riesgo_HTA) factoresRiesgos.push(1);\n    if (inputs.factor_riesgo_DLP) factoresRiesgos.push(2);\n    if (inputs.factor_riesgo_DBT) factoresRiesgos.push(3);\n    if (inputs.factor_riesgo_DBT_IR) factoresRiesgos.push(4);\n    if (inputs.factor_riesgo_TBQ) factoresRiesgos.push(5);\n    if (inputs.factor_riesgo_Ex_TBQ) factoresRiesgos.push(6);\n    if (inputs.factor_riesgo_AHF) factoresRiesgos.push(7);\n    if (inputs.factor_riesgo_OBESIDAD) factoresRiesgos.push(8);\n    cuadroClinico = {\n      tipo_clinica: inputs.cuadroClinico_tipo\n      /* cuadroClinico_paroCardio: inputs.cuadroClinico_paroCardio,\n      cuadroClinico_shockCardio:inputs.cuadroClinico_shockCardio,\n      cuadroClinico_icg:inputs.cuadroClinico_icg,\n      cuadroClinico_arritmiaBloqueoAv:inputs.cuadroClinico_arritmiaBloqueoAv,\n      cuadroClinico_arritmiaTvFv:inputs.cuadroClinico_arritmiaTvFv */\n\n    };\n    /* if(inputs.cuadroClinico_tipo == \"1\"){\n    \tcuadroClinico[\"cuadroClinico_tipoClaseFunc\"]= inputs.cuadroClinico_tipoClaseFunc\n    \t\n    }\n    if(inputs.cuadroClinico_tipo == \"2\"){\n    \tclinicaScasest = {\n    \t\tclinicaScasest_tipoAi: inputs.clinicaScasest_tipoAi,\n    \t\tclinicaScasest_grsAi:inputs.clinicaScasest_grsAi,\n    \t\tclinicaScasest_tipoNs:inputs.clinicaScasest_tipoNs\n    \t\t}\n    \tcuadroClinico[\"clinicaScasest\"] = clinicaScasest\n    \t}\n    if(inputs.cuadroClinico_tipo == \"3\"){\n    \tclinicaStemi = {\n    \t\tclinicaStemi_tipo: inputs.clinicaStemi_tipo,\n    \t\tclinicaStemi_tipoKk:inputs.clinicaStemi_tipoKk,\n    \t\tclinicaStemi_tipoAtc:inputs.clinicaStemi_tipoAtc,\n    \t\tclinicaStemi_diurna:inputs.clinicaStemi_diurna,\n    \t\tclinicaStemi_tipoTiempoID:clinicaStemi_tipoTiempoID,\n    \t\tclinicaStemi_tipoTiempoLlS:clinicaStemi_tipoTiempoLlS,\n    \t\tclinicaStemi_tipoTiempoPC:clinicaStemi_tipoTiempoPC\n    \t}\n    \tcuadroClinico[\"clinicaStemi\"] = clinicaStemi\n    \t\n    } */\n\n    datos_angio = {\n      tipo_procedimiento: inputs.angiografico_tipo_procedimiento,\n      vasos_enf: [inputs.angiografico_vasos_enf],\n      vasos_tratados: [inputs.angiografico_vasos_tratados],\n      tronco: inputs.angiografico_tronco,\n      syntax: inputs.angiografico_syntax,\n      dominancia: inputs.angiografico_dominancia,\n      tipo_revascularizacion: inputs.angiografico_revascularizacion,\n      tipo_motivo: inputs.angiografico_tipo_motivo,\n      tiempo_revascularizacion: inputs.angiografico_tiempo_revascularizacion\n    };\n    lesiones = {\n      arteria_id: inputs.lesion_arteria,\n      localizacion_id: inputs.lesion_localizacion\n      /* lesion_angio_contralateral: inputs.lesion_angio_contralateral,\n      lesion_balon: inputs.lesion_balon,\n      lesion_balon_atmosfera: inputs.lesion_balon_atmosfera,\n      lesion_balon_diametro: inputs.lesion_balon_diametro,\n      lesion_bifurcacion: inputs.lesion_bifurcacion,\n      lesion_blush_post: inputs.lesion_blush_post,\n      lesion_cto_cuerda: inputs.lesion_cto_cuerda,\n      lesion_cto_tiempo_cruce: inputs.lesion_cto_tiempo_cruce,\n      lesion_cutting_balon: inputs.lesion_cutting_balon,\n      lesion_cutting_balon_atmosfera: inputs.lesion_cutting_balon_atmosfera,\n      lesion_cutting_balon_diametro: inputs.lesion_cutting_balon_diametro,\n      lesion_exito_angio: inputs.lesion_exito_angio,\n      lesion_fibrinoliticos: inputs.lesion_fibrinoliticos,\n      lesion_inhibidores: inputs.lesion_inhibidores,\n      lesion_kissing_final: inputs.lesion_kissing_final,\n      lesion_microcateter: inputs.lesion_microcateter,\n      lesion_no_reflow: inputs.lesion_no_reflow,\n      lesion_postdilatacion: inputs.lesion_postdilatacion,\n      lesion_postdilatacion_diametro: inputs.lesion_postdilatacion_diametro,\n      lesion_predilatacion: inputs.lesion_predilatacion,\n      lesion_proteccion_distral: inputs.lesion_proteccion_distral,\n      lesion_recanalizacion_retrograda: inputs.lesion_recanalizacion_retrograda,\n      lesion_rotablator: inputs.lesion_rotablator,\n      lesion_rotablator_oliva: inputs.lesion_rotablator_oliva,\n      lesion_stent: inputs.lesion_stent,\n      lesion_tromboaspiracion: inputs.lesion_tromboaspiracion,\n      \t\t\tlesion_diam_vaso:inputs.lesion_diam_vaso,\n      lesion_timi_post:inputs.lesion_timi_post,\n      lesion_timi_pre:inputs.lesion_timi_pre,\n      lesion_obstruccion_pre:inputs.lesion_obstruccion_pre,\n      lesion_obstruccion_post:inputs.lesion_obstruccion_post,\n      lesion_tipo_longitud:inputs.lesion_tipo_longitud,\n      lesion_pres_trombo:inputs.lesion_pres_trombo,\n      lesion_calc_severa:inputs.lesion_calc_severa,\n      lesion_restenosis:inputs.lesion_restenosis,\n      lesion_angulacion:inputs.lesion_angulacion,\n      lesion_tipo_oclusion:inputs.lesion_tipo_oclusion,\n      lesion_tipo_bifurcacion:inputs.lesion_tipo_bifurcacion */\n\n    };\n    procedimiento = {\n      procedimiento_fecha_procedimiento: procedimiento_fecha_procedimiento,\n      procedimiento_tipo_acceso: inputs.procedimiento_tipo_acceso,\n      procedimiento_french: inputs.procedimiento_french,\n      procedimiento_contraste: inputs.procedimiento_contraste,\n      procedimiento_kerma: inputs.procedimiento_kerma,\n      procedimiento_tipo_fluroscopia: inputs.procedimiento_tipo_fluroscopia\n    };\n    stent = {\n      stent_bare: inputs.stent_bare,\n      stent_des: inputs.stent_des,\n      stent_diametro: inputs.stent_diametro,\n      stent_graft: inputs.stent_graft,\n      stent_tipo: inputs.stent_tipo\n    };\n    form = {\n      fields: {\n        paciente: paciente,\n        antecedente: antecedentes,\n        riesgos: factoresRiesgos,\n        clinica: cuadroClinico,\n        //angiografico : datos_angio,\n        angiografico: null,\n        lesiones: lesiones,\n        procedimiento: null,\n        stent: null,\n        title: \"Reporte prueba\",\n        mailto: null\n      }\n    };\n    setPreload(true);\n    const response = await getReport(form);\n    console.log(\"respuesta agregar\", response);\n\n    try {\n      setPreload(false);\n      setReporteApply(true); //history.push(`/admin/proveedor_lizen/listado`);\n    } catch (error) {\n      console.log(\"catch\", error); //toast.error(JSON.stringify(error.message))\n    } //console.log(JSON.stringify(form))\n\n    /* if(event){\n      event.preventDefault();\n    } */\n\n  };\n\n  const handleChangeAccordion = panel => (event, newExpanded) => {\n    setExpanded({ ...expanded,\n      [panel]: newExpanded\n    });\n  };\n\n  const handleInputChange = event => {\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleInputCheckedChange = event => {\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    handleChangeAccordion,\n    handleChangeEdad,\n    valuetext,\n    handleDateFROMchange,\n    handleDateTOchange,\n    handleInputCheckedChange,\n    handleDateTimeChangeID,\n    handleDateTimeChangePC,\n    handleDateTimeChangeLlS,\n    handleDateTimeChangeProcedimiento,\n    inputs,\n    expanded,\n    paciente_ingreso_from,\n    paciente_ingreso_to,\n    paciente_edad,\n    localeMap,\n    locale,\n    clinicaStemi_tipoTiempoID,\n    clinicaStemi_tipoTiempoPC,\n    clinicaStemi_tipoTiempoLlS,\n    procedimiento_fecha_procedimiento,\n    preload,\n    reportesApply\n  };\n}\n\n_s(useForm, \"QJeE5BjoHxdaK2AOop8Lj0OS5p4=\");","map":{"version":3,"sources":["/var/www/html/personal/reportreact/src/components/customHooks.js"],"names":["React","useState","enLocale","getReport","useForm","initialValues","inputs","setInputs","paciente_edad","setPaciente_edad","paciente_ingreso_from","handleDateFROMchange","paciente_ingreso_to","handleDateTOchange","preload","setPreload","clinicaStemi_tipoTiempoID","handleDateTimeChangeID","clinicaStemi_tipoTiempoPC","handleDateTimeChangePC","clinicaStemi_tipoTiempoLlS","handleDateTimeChangeLlS","reportesApply","setReportesApply","procedimiento_fecha_procedimiento","handleDateTimeChangeProcedimiento","expanded","setExpanded","paciente","antecedentes","factoresRiesgos","clinica","datosAngio","lesiones","procedimiento","complicacionesSala","stent","reportes","localeMap","es","locale","valuetext","value","handleChangeEdad","e","data","preventDefault","handleSubmit","event","cuadroClinico","clinicaScasest","clinicaStemi","datos_angio","form","edad","from","to","sexo","paciente_sexo","ingreso","Date","toISOString","slice","antecedente_EPOC","push","antecedente_ACV","antecedente_AIT","antecedente_ATC","antecedente_CRM","antecedente_FA","antecedente_HTP","antecedente_IAM","antecedente_IRC","antecedente_MCPH","factor_riesgo_HTA","factor_riesgo_DLP","factor_riesgo_DBT","factor_riesgo_DBT_IR","factor_riesgo_TBQ","factor_riesgo_Ex_TBQ","factor_riesgo_AHF","factor_riesgo_OBESIDAD","tipo_clinica","cuadroClinico_tipo","tipo_procedimiento","angiografico_tipo_procedimiento","vasos_enf","angiografico_vasos_enf","vasos_tratados","angiografico_vasos_tratados","tronco","angiografico_tronco","syntax","angiografico_syntax","dominancia","angiografico_dominancia","tipo_revascularizacion","angiografico_revascularizacion","tipo_motivo","angiografico_tipo_motivo","tiempo_revascularizacion","angiografico_tiempo_revascularizacion","arteria_id","lesion_arteria","localizacion_id","lesion_localizacion","procedimiento_tipo_acceso","procedimiento_french","procedimiento_contraste","procedimiento_kerma","procedimiento_tipo_fluroscopia","stent_bare","stent_des","stent_diametro","stent_graft","stent_tipo","fields","antecedente","riesgos","angiografico","title","mailto","response","console","log","setReporteApply","error","handleChangeAccordion","panel","newExpanded","handleInputChange","target","name","handleInputCheckedChange","checked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport enLocale from \"date-fns/locale/es\";\nimport { getReport } from '../api/reportes';\n\nexport default function useForm  (initialValues){\n    const [inputs,setInputs] = useState(initialValues);\n    const [paciente_edad, setPaciente_edad] = React.useState([1,100]);\n\tconst [paciente_ingreso_from, handleDateFROMchange] = React.useState(null);\n\tconst [paciente_ingreso_to,handleDateTOchange] = React.useState(null);\n\tconst [preload,setPreload] = React.useState(false);\n\tconst [clinicaStemi_tipoTiempoID,handleDateTimeChangeID] = React.useState(null)\n\tconst [clinicaStemi_tipoTiempoPC,handleDateTimeChangePC] = React.useState(null)\n\tconst [clinicaStemi_tipoTiempoLlS,handleDateTimeChangeLlS] = React.useState(null)\n\tconst [reportesApply,setReportesApply] = React.useState(true)\n\tconst [procedimiento_fecha_procedimiento, handleDateTimeChangeProcedimiento] = React.useState(null);\n    const [expanded, setExpanded] = React.useState({\n      paciente:true,\n      antecedentes:false,\n      factoresRiesgos:false,\n      clinica:false,\n      datosAngio:false,\n      lesiones:false,\n      procedimiento:false,\n      complicacionesSala:false,\n      stent:false,\n\t  reportes:false\n      });\n    const [localeMap] = React.useState({\n        es:enLocale\n      })\n    const [locale] = React.useState(\"es\");\t\n    function valuetext(value) {\n        return value;\n        }\n    const handleChangeEdad = (e,data) => {\n\t\tsetPaciente_edad(data);\n\t\te.preventDefault()\n    };\n\n    const handleSubmit = async (event) => {\n      \n\t\t\t\n\t\tlet paciente = {};\n\t\tlet antecedentes = null\n\t\tlet factoresRiesgos = null;\n\t\tlet cuadroClinico = {};\n\t\tlet clinicaScasest = {};\n\t\tlet clinicaStemi = {};\n\t\tlet datos_angio = {};\n\t\tlet lesiones={};\n\t\tlet procedimiento = {};\n\t\tlet stent = {};\n\t\tlet form = {};\n\t\t\n\t\tpaciente = {\n\t\t\tedad:{\n\t\t\t\tfrom: paciente_edad[0],\n\t\t\t\tto: paciente_edad[1]\n\t\t\t},\n\t\t\tsexo:inputs.paciente_sexo,\n\t\t\tingreso:{\n\t\t\t\tfrom: paciente_ingreso_from === null ? '1970-01-01' : new Date(paciente_ingreso_from).toISOString().slice(0, 10),\n\t\t\t\tto: paciente_ingreso_to === null ? new Date().toISOString().slice(0, 10) : new Date(paciente_ingreso_to).toISOString().slice(0, 10)\n\t\t\t}\n\t\t}\n\t\t//Antecedentes\n\t\tif(inputs.antecedente_EPOC)\n\t\t\tantecedentes.push(\"epoc\")\n\n\t\tif(inputs.antecedente_ACV)\n\t\t\tantecedentes.push(\"acv\")\n\n\t\tif(inputs.antecedente_AIT)\n\t\t\tantecedentes.push(\"ait\")\n\n\t\tif(inputs.antecedente_ATC)\n\t\t\tantecedentes.push(\"atc_previa\")\n\n\t\tif(inputs.antecedente_CRM)\n\t\t\tantecedentes.push(\"crm_previa\")\n\n\t\tif(inputs.antecedente_FA)\n\t\t\tantecedentes.push(\"fa\")\n\n\t\tif(inputs.antecedente_HTP)\n\t\t\tantecedentes.push(\"htp\")\n\n\t\tif(inputs.antecedente_IAM)\n\t\t\tantecedentes.push(\"iam_previo\")\n\t\t\t\n\t\tif(inputs.antecedente_IRC)\n\t\t\tantecedentes.push(\"irce\")\n\n\t\tif(inputs.antecedente_MCPH)\n\t\t\tantecedentes.push(\"mio_hiper\")\n\n\t\t//Factores de riesgo\n\n\t\tif(inputs.factor_riesgo_HTA)\n\t\t\tfactoresRiesgos.push(1)\n\n\t\tif(inputs.factor_riesgo_DLP)\n\t\t\tfactoresRiesgos.push(2)\n\t\t\n\t\tif(inputs.factor_riesgo_DBT)\n\t\t\tfactoresRiesgos.push(3)\n\n\t\tif(inputs.factor_riesgo_DBT_IR)\n\t\t\tfactoresRiesgos.push(4)\n\t\tif(inputs.factor_riesgo_TBQ)\n\t\t\tfactoresRiesgos.push(5)\n\n\t\tif(inputs.factor_riesgo_Ex_TBQ)\n\t\t\tfactoresRiesgos.push(6)\n\n\t\tif(inputs.factor_riesgo_AHF)\n\t\t\tfactoresRiesgos.push(7)\n\n\t\tif(inputs.factor_riesgo_OBESIDAD)\n\t\t\tfactoresRiesgos.push(8)\n\t\t\t\n\t\t\n\t\tcuadroClinico ={\n\t\t\ttipo_clinica:inputs.cuadroClinico_tipo,\n\t\t\t/* cuadroClinico_paroCardio: inputs.cuadroClinico_paroCardio,\n\t\t\tcuadroClinico_shockCardio:inputs.cuadroClinico_shockCardio,\n\t\t\tcuadroClinico_icg:inputs.cuadroClinico_icg,\n\t\t\tcuadroClinico_arritmiaBloqueoAv:inputs.cuadroClinico_arritmiaBloqueoAv,\n\t\t\tcuadroClinico_arritmiaTvFv:inputs.cuadroClinico_arritmiaTvFv */\n\t\t}\n\t\t/* if(inputs.cuadroClinico_tipo == \"1\"){\n\t\t\tcuadroClinico[\"cuadroClinico_tipoClaseFunc\"]= inputs.cuadroClinico_tipoClaseFunc\n\t\t\t\n\t\t}\n\t\tif(inputs.cuadroClinico_tipo == \"2\"){\n\t\t\tclinicaScasest = {\n\t\t\t\tclinicaScasest_tipoAi: inputs.clinicaScasest_tipoAi,\n\t\t\t\tclinicaScasest_grsAi:inputs.clinicaScasest_grsAi,\n\t\t\t\tclinicaScasest_tipoNs:inputs.clinicaScasest_tipoNs\n\n\t\t\t}\n\t\t\tcuadroClinico[\"clinicaScasest\"] = clinicaScasest\n\n\t\t}\n\t\tif(inputs.cuadroClinico_tipo == \"3\"){\n\t\t\tclinicaStemi = {\n\t\t\t\tclinicaStemi_tipo: inputs.clinicaStemi_tipo,\n\t\t\t\tclinicaStemi_tipoKk:inputs.clinicaStemi_tipoKk,\n\t\t\t\tclinicaStemi_tipoAtc:inputs.clinicaStemi_tipoAtc,\n\t\t\t\tclinicaStemi_diurna:inputs.clinicaStemi_diurna,\n\t\t\t\tclinicaStemi_tipoTiempoID:clinicaStemi_tipoTiempoID,\n\t\t\t\tclinicaStemi_tipoTiempoLlS:clinicaStemi_tipoTiempoLlS,\n\t\t\t\tclinicaStemi_tipoTiempoPC:clinicaStemi_tipoTiempoPC\n\t\t\t}\n\t\t\tcuadroClinico[\"clinicaStemi\"] = clinicaStemi\n\t\t\t\n\t\t} */\n\n\t\tdatos_angio = {\n\t\t\ttipo_procedimiento: inputs.angiografico_tipo_procedimiento,\n\t\t\tvasos_enf: [inputs.angiografico_vasos_enf],\n\t\t\tvasos_tratados: [inputs.angiografico_vasos_tratados],\n\t\t\ttronco: inputs.angiografico_tronco,\n\t\t\tsyntax: inputs.angiografico_syntax,\n\t\t\tdominancia: inputs.angiografico_dominancia,\n\t\t\ttipo_revascularizacion: inputs.angiografico_revascularizacion,\n\t\t\ttipo_motivo: inputs.angiografico_tipo_motivo,\n\t\t\ttiempo_revascularizacion: inputs.angiografico_tiempo_revascularizacion,\n\t\t}\n\n\t\tlesiones= {\n\t\t\tarteria_id:inputs.lesion_arteria,\n\t\t\tlocalizacion_id:inputs.lesion_localizacion\n\t\t\t/* lesion_angio_contralateral: inputs.lesion_angio_contralateral,\n\t\t\tlesion_balon: inputs.lesion_balon,\n\t\t\tlesion_balon_atmosfera: inputs.lesion_balon_atmosfera,\n\t\t\tlesion_balon_diametro: inputs.lesion_balon_diametro,\n\t\t\tlesion_bifurcacion: inputs.lesion_bifurcacion,\n\t\t\tlesion_blush_post: inputs.lesion_blush_post,\n\t\t\tlesion_cto_cuerda: inputs.lesion_cto_cuerda,\n\t\t\tlesion_cto_tiempo_cruce: inputs.lesion_cto_tiempo_cruce,\n\t\t\tlesion_cutting_balon: inputs.lesion_cutting_balon,\n\t\t\tlesion_cutting_balon_atmosfera: inputs.lesion_cutting_balon_atmosfera,\n\t\t\tlesion_cutting_balon_diametro: inputs.lesion_cutting_balon_diametro,\n\t\t\tlesion_exito_angio: inputs.lesion_exito_angio,\n\t\t\tlesion_fibrinoliticos: inputs.lesion_fibrinoliticos,\n\t\t\tlesion_inhibidores: inputs.lesion_inhibidores,\n\t\t\tlesion_kissing_final: inputs.lesion_kissing_final,\n\t\t\tlesion_microcateter: inputs.lesion_microcateter,\n\t\t\tlesion_no_reflow: inputs.lesion_no_reflow,\n\t\t\tlesion_postdilatacion: inputs.lesion_postdilatacion,\n\t\t\tlesion_postdilatacion_diametro: inputs.lesion_postdilatacion_diametro,\n\t\t\tlesion_predilatacion: inputs.lesion_predilatacion,\n\t\t\tlesion_proteccion_distral: inputs.lesion_proteccion_distral,\n\t\t\tlesion_recanalizacion_retrograda: inputs.lesion_recanalizacion_retrograda,\n\t\t\tlesion_rotablator: inputs.lesion_rotablator,\n\t\t\tlesion_rotablator_oliva: inputs.lesion_rotablator_oliva,\n\t\t\tlesion_stent: inputs.lesion_stent,\n\t\t\tlesion_tromboaspiracion: inputs.lesion_tromboaspiracion,\n\t\t\n\t\t\tlesion_diam_vaso:inputs.lesion_diam_vaso,\n\t\t\tlesion_timi_post:inputs.lesion_timi_post,\n\t\t\tlesion_timi_pre:inputs.lesion_timi_pre,\n\t\t\tlesion_obstruccion_pre:inputs.lesion_obstruccion_pre,\n\t\t\tlesion_obstruccion_post:inputs.lesion_obstruccion_post,\n\t\t\tlesion_tipo_longitud:inputs.lesion_tipo_longitud,\n\t\t\tlesion_pres_trombo:inputs.lesion_pres_trombo,\n\t\t\tlesion_calc_severa:inputs.lesion_calc_severa,\n\t\t\tlesion_restenosis:inputs.lesion_restenosis,\n\t\t\tlesion_angulacion:inputs.lesion_angulacion,\n\t\t\tlesion_tipo_oclusion:inputs.lesion_tipo_oclusion,\n\t\t\tlesion_tipo_bifurcacion:inputs.lesion_tipo_bifurcacion */\n\t\t}\n\t\tprocedimiento = {\n\t\t\tprocedimiento_fecha_procedimiento:procedimiento_fecha_procedimiento,\n\t\t\tprocedimiento_tipo_acceso:inputs.procedimiento_tipo_acceso,\n\t\t\tprocedimiento_french:inputs.procedimiento_french,\n\t\t\tprocedimiento_contraste:inputs.procedimiento_contraste,\n\t\t\tprocedimiento_kerma:inputs.procedimiento_kerma,\n\t\t\tprocedimiento_tipo_fluroscopia:inputs.procedimiento_tipo_fluroscopia\n\t\t}\n\t\tstent={\n\t\t\tstent_bare: inputs.stent_bare,\n\t\t\tstent_des: inputs.stent_des,\n\t\t\tstent_diametro: inputs.stent_diametro,\n\t\t\tstent_graft: inputs.stent_graft,\n\t\t\tstent_tipo: inputs.stent_tipo\n\t\t}\n\t\tform ={\n\t\t\tfields:{\n\t\t\t\tpaciente:paciente,\n\t\t\t\tantecedente:antecedentes,\n\t\t\t\triesgos:factoresRiesgos,\n\t\t\t\tclinica:cuadroClinico,\n\t\t\t\t//angiografico : datos_angio,\n\t\t\t\tangiografico : null,\n\t\t\t\tlesiones:lesiones,\n\t\t\t\tprocedimiento:null,\n\t\t\t\tstent:null,\n\t\t\t\ttitle: \"Reporte prueba\",\n\t\t\t\tmailto:null\n\t\t\t}\n\t\t}\n\n\t\tsetPreload(true);\n\n\t\tconst response = await getReport(form)\n\t\tconsole.log(\"respuesta agregar\",response)\n\t\t\n\t\ttry {\n\t\t\tsetPreload(false);\n\t\t\tsetReporteApply(true)\n\t\t\t//history.push(`/admin/proveedor_lizen/listado`);\n\t\t\t\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log(\"catch\",error)\n\t\t\t\n\t\t\t\n\t\t\t//toast.error(JSON.stringify(error.message))\n\t\t} \n \n\t\t//console.log(JSON.stringify(form))\n      /* if(event){\n        event.preventDefault();\n      } */\n    }\n    const handleChangeAccordion = (panel)=>(event, newExpanded) => {\n\t\n      setExpanded({...expanded,[panel]:newExpanded})\n    };\n  \n    const handleInputChange = (event) => {\n      \n      setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n      }\n     const handleInputCheckedChange = (event) => {\n\t\t\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.checked}));\n\t\t}\n    return {\n\t\thandleSubmit,\n\t\thandleInputChange,\n\t\thandleChangeAccordion,\n\t\thandleChangeEdad,\n\t\tvaluetext,\n\t\thandleDateFROMchange,\n\t\thandleDateTOchange,\n\t\thandleInputCheckedChange,\n\t\thandleDateTimeChangeID,\n\t\thandleDateTimeChangePC,\n\t\thandleDateTimeChangeLlS,\n\t\thandleDateTimeChangeProcedimiento,\n\t\tinputs,\n\t\texpanded,\n\t\tpaciente_ingreso_from,\n\t\tpaciente_ingreso_to,\n\t\tpaciente_edad,\n\t\tlocaleMap,\n\t\tlocale,\n\t\tclinicaStemi_tipoTiempoID,\n\t\tclinicaStemi_tipoTiempoPC,\n\t\tclinicaStemi_tipoTiempoLlS,\n\t\tprocedimiento_fecha_procedimiento,\n\t\tpreload,\n\t\treportesApply\n    };\n}"]},"metadata":{},"sourceType":"module"}