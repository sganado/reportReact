{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport enLocale from \"date-fns/locale/es\";\nexport default function useForm(initialValues) {\n  _s();\n\n  const [inputs, setInputs] = useState(initialValues);\n  const [paciente_edad, setPaciente_edad] = React.useState([1, 100]);\n  const [paciente_ingreso_from, handleDateFROMchange] = React.useState(null);\n  const [paciente_ingreso_to, handleDateTOchange] = React.useState(null);\n  const [preload, setPreload] = React.useState(false);\n  const [clinicaStemi_tipoTiempoID, handleDateTimeChangeID] = React.useState(null);\n  const [clinicaStemi_tipoTiempoPC, handleDateTimeChangePC] = React.useState(null);\n  const [clinicaStemi_tipoTiempoLlS, handleDateTimeChangeLlS] = React.useState(null);\n  const [procedimiento_fecha_procedimiento, handleDateTimeChangeProcedimiento] = React.useState(null);\n  const [expanded, setExpanded] = React.useState({\n    paciente: true,\n    antecedentes: false,\n    factoresRiesgos: false,\n    clinica: false,\n    datosAngio: false,\n    lesiones: false,\n    procedimiento: false,\n    complicacionesSala: false,\n    stent: false\n  });\n  const [localeMap] = React.useState({\n    es: enLocale\n  });\n  const [locale] = React.useState(\"es\");\n\n  function valuetext(value) {\n    return value;\n  }\n\n  const handleChangeEdad = (e, data) => {\n    setPaciente_edad(data);\n    e.preventDefault();\n  };\n\n  const handleSubmit = event => {\n    console.log(paciente_edad);\n    preventDefault();\n    let paciente = {};\n    let antecedentes = {};\n    let factoresRiesgos = {};\n    let cuadroClinico = {};\n    let clinicaScasest = {};\n    let clinicaStemi = {};\n    let datos_angio = {};\n    let lesiones = {};\n    let procedimiento = {};\n    let stent = {};\n    let form = {};\n    let edad = paciente_edad.split(\",\");\n    console.log(edad);\n    paciente = {\n      edad: {\n        from: edad[0],\n        to: edad[1]\n      },\n      sexo: inputs.paciente_sexo,\n      ingreso: {\n        from: paciente_ingreso_from,\n        to: paciente_ingreso_to\n      }\n    };\n    antecedentes = {\n      antecedente_ACV: inputs.antecedente_ACV,\n      antecedente_AIT: inputs.antecedente_AIT,\n      antecedente_ATC: inputs.antecedente_ATC,\n      antecedente_CRM: inputs.antecedente_CRM,\n      antecedente_EPOC: inputs.antecedente_EPOC,\n      antecedente_FA: inputs.antecedente_FA,\n      antecedente_HTP: inputs.antecedente_HTP,\n      antecedente_IAM: inputs.antecedente_IAM,\n      antecedente_IRC: inputs.antecedente_IRC,\n      antecedente_MCPH: inputs.antecedente_MCPH,\n      antecedente_feyVI: inputs.antecedente_feyVI,\n      antecedente_patologia_enfermedad: inputs.antecedente_patologia_enfermedad,\n      antecedente_patologia_grado: inputs.antecedente_patologia_grado,\n      antecedente_patologia_valvular: inputs.antecedente_patologia_valvular\n    };\n    factoresRiesgos = {\n      factor_riesgo_AHF: inputs.factor_riesgo_AHF,\n      factor_riesgo_DBT: inputs.factor_riesgo_DBT,\n      factor_riesgo_DBT_IR: inputs.factor_riesgo_DBT_IR,\n      factor_riesgo_DLP: inputs.factor_riesgo_DLP,\n      factor_riesgo_Ex_TBQ: inputs.factor_riesgo_Ex_TBQ,\n      factor_riesgo_HTA: inputs.factor_riesgo_HTA,\n      factor_riesgo_OBESIDAD: inputs.factor_riesgo_OBESIDAD,\n      factor_riesgo_TBQ: inputs.factor_riesgo_TBQ\n    };\n    cuadroClinico = {\n      cuadroClinico_tipo: inputs.cuadroClinico_tipo,\n      cuadroClinico_paroCardio: inputs.cuadroClinico_paroCardio,\n      cuadroClinico_shockCardio: inputs.cuadroClinico_shockCardio,\n      cuadroClinico_icg: inputs.cuadroClinico_icg,\n      cuadroClinico_arritmiaBloqueoAv: inputs.cuadroClinico_arritmiaBloqueoAv,\n      cuadroClinico_arritmiaTvFv: inputs.cuadroClinico_arritmiaTvFv\n    };\n\n    if (inputs.cuadroClinico_tipo == \"1\") {\n      cuadroClinico[\"cuadroClinico_tipoClaseFunc\"] = inputs.cuadroClinico_tipoClaseFunc;\n    }\n\n    if (inputs.cuadroClinico_tipo == \"2\") {\n      clinicaScasest = {\n        clinicaScasest_tipoAi: inputs.clinicaScasest_tipoAi,\n        clinicaScasest_grsAi: inputs.clinicaScasest_grsAi,\n        clinicaScasest_tipoNs: inputs.clinicaScasest_tipoNs\n      };\n      cuadroClinico[\"clinicaScasest\"] = clinicaScasest;\n    }\n\n    if (inputs.cuadroClinico_tipo == \"3\") {\n      clinicaStemi = {\n        clinicaStemi_tipo: inputs.clinicaStemi_tipo,\n        clinicaStemi_tipoKk: inputs.clinicaStemi_tipoKk,\n        clinicaStemi_tipoAtc: inputs.clinicaStemi_tipoAtc,\n        clinicaStemi_diurna: inputs.clinicaStemi_diurna,\n        clinicaStemi_tipoTiempoID: clinicaStemi_tipoTiempoID,\n        clinicaStemi_tipoTiempoLlS: clinicaStemi_tipoTiempoLlS,\n        clinicaStemi_tipoTiempoPC: clinicaStemi_tipoTiempoPC\n      };\n      cuadroClinico[\"clinicaStemi\"] = clinicaStemi;\n    }\n\n    datos_angio = {\n      angiografico_dominancia: inputs.angiografico_dominancia,\n      angiografico_num_cine: inputs.angiografico_num_cine,\n      angiografico_revascularizacion: inputs.angiografico_revascularizacion,\n      angiografico_syntax: inputs.angiografico_syntax,\n      angiografico_tiempo_revascularizacion: inputs.angiografico_tiempo_revascularizacion,\n      angiografico_tipo_motivo: inputs.angiografico_tipo_motivo,\n      angiografico_tipo_procedimiento: inputs.angiografico_tipo_procedimiento,\n      angiografico_tronco: inputs.angiografico_tronco,\n      angiografico_vasos_enf: inputs.angiografico_vasos_enf,\n      angiografico_vasos_tratados: inputs.angiografico_vasos_tratados\n    };\n    lesiones = {\n      lesion_angio_contralateral: inputs.lesion_angio_contralateral,\n      lesion_balon: inputs.lesion_balon,\n      lesion_balon_atmosfera: inputs.lesion_balon_atmosfera,\n      lesion_balon_diametro: inputs.lesion_balon_diametro,\n      lesion_bifurcacion: inputs.lesion_bifurcacion,\n      lesion_blush_post: inputs.lesion_blush_post,\n      lesion_cto_cuerda: inputs.lesion_cto_cuerda,\n      lesion_cto_tiempo_cruce: inputs.lesion_cto_tiempo_cruce,\n      lesion_cutting_balon: inputs.lesion_cutting_balon,\n      lesion_cutting_balon_atmosfera: inputs.lesion_cutting_balon_atmosfera,\n      lesion_cutting_balon_diametro: inputs.lesion_cutting_balon_diametro,\n      lesion_exito_angio: inputs.lesion_exito_angio,\n      lesion_fibrinoliticos: inputs.lesion_fibrinoliticos,\n      lesion_inhibidores: inputs.lesion_inhibidores,\n      lesion_kissing_final: inputs.lesion_kissing_final,\n      lesion_microcateter: inputs.lesion_microcateter,\n      lesion_no_reflow: inputs.lesion_no_reflow,\n      lesion_postdilatacion: inputs.lesion_postdilatacion,\n      lesion_postdilatacion_diametro: inputs.lesion_postdilatacion_diametro,\n      lesion_predilatacion: inputs.lesion_predilatacion,\n      lesion_proteccion_distral: inputs.lesion_proteccion_distral,\n      lesion_recanalizacion_retrograda: inputs.lesion_recanalizacion_retrograda,\n      lesion_rotablator: inputs.lesion_rotablator,\n      lesion_rotablator_oliva: inputs.lesion_rotablator_oliva,\n      lesion_stent: inputs.lesion_stent,\n      lesion_tromboaspiracion: inputs.lesion_tromboaspiracion,\n      lesion_arteria: inputs.lesion_arteria,\n      lesion_localizacion: inputs.lesion_localizacion,\n      lesion_diam_vaso: inputs.lesion_diam_vaso,\n      lesion_timi_post: inputs.lesion_timi_post,\n      lesion_timi_pre: inputs.lesion_timi_pre,\n      lesion_obstruccion_pre: inputs.lesion_obstruccion_pre,\n      lesion_obstruccion_post: inputs.lesion_obstruccion_post,\n      lesion_tipo_longitud: inputs.lesion_tipo_longitud,\n      lesion_pres_trombo: inputs.lesion_pres_trombo,\n      lesion_calc_severa: inputs.lesion_calc_severa,\n      lesion_restenosis: inputs.lesion_restenosis,\n      lesion_angulacion: inputs.lesion_angulacion,\n      lesion_tipo_oclusion: inputs.lesion_tipo_oclusion,\n      lesion_tipo_bifurcacion: inputs.lesion_tipo_bifurcacion\n    };\n    procedimiento = {\n      procedimiento_fecha_procedimiento: procedimiento_fecha_procedimiento,\n      procedimiento_tipo_acceso: inputs.procedimiento_tipo_acceso,\n      procedimiento_french: inputs.procedimiento_french,\n      procedimiento_contraste: inputs.procedimiento_contraste,\n      procedimiento_kerma: inputs.procedimiento_kerma,\n      procedimiento_tipo_fluroscopia: inputs.procedimiento_tipo_fluroscopia\n    };\n    stent = {\n      stent_bare: inputs.stent_bare,\n      stent_des: inputs.stent_des,\n      stent_diametro: inputs.stent_diametro,\n      stent_graft: inputs.stent_graft,\n      stent_tipo: inputs.stent_tipo\n    };\n    form = {\n      fields: {\n        paciente: paciente,\n        antecedentes: antecedentes,\n        factores_riesgo: factoresRiesgos,\n        cuadro_clinico: cuadroClinico,\n        datos_angio: datos_angio,\n        lesiones: lesiones,\n        procedimiento: procedimiento,\n        stent: stent\n      }\n    };\n    setPreload(true);\n    /* \tfetch(url, {\n               \"post\",\n               form,\n           })\n           .then(response => {\n    \t\twindow.open(this.props.vouchersReducer.responsePrintVoucher.message, '_blank');\n    \t\tsetPreload(false)}\n    \t)\n    */\n\n    console.log(JSON.stringify(form));\n\n    if (event) {\n      event.preventDefault();\n    }\n  };\n\n  const handleChangeAccordion = panel => (event, newExpanded) => {\n    setExpanded({ ...expanded,\n      [panel]: newExpanded\n    });\n  };\n\n  const handleInputChange = event => {\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleInputCheckedChange = event => {\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    handleChangeAccordion,\n    handleChangeEdad,\n    valuetext,\n    handleDateFROMchange,\n    handleDateTOchange,\n    handleInputCheckedChange,\n    handleDateTimeChangeID,\n    handleDateTimeChangePC,\n    handleDateTimeChangeLlS,\n    handleDateTimeChangeProcedimiento,\n    inputs,\n    expanded,\n    paciente_ingreso_from,\n    paciente_ingreso_to,\n    paciente_edad,\n    localeMap,\n    locale,\n    clinicaStemi_tipoTiempoID,\n    clinicaStemi_tipoTiempoPC,\n    clinicaStemi_tipoTiempoLlS,\n    procedimiento_fecha_procedimiento,\n    preload\n  };\n}\n\n_s(useForm, \"8RV6Td1/cpKYHn68wNObFV9O3gg=\");","map":{"version":3,"sources":["/var/www/html/personal/reportreact/src/components/customHooks.js"],"names":["React","useState","enLocale","useForm","initialValues","inputs","setInputs","paciente_edad","setPaciente_edad","paciente_ingreso_from","handleDateFROMchange","paciente_ingreso_to","handleDateTOchange","preload","setPreload","clinicaStemi_tipoTiempoID","handleDateTimeChangeID","clinicaStemi_tipoTiempoPC","handleDateTimeChangePC","clinicaStemi_tipoTiempoLlS","handleDateTimeChangeLlS","procedimiento_fecha_procedimiento","handleDateTimeChangeProcedimiento","expanded","setExpanded","paciente","antecedentes","factoresRiesgos","clinica","datosAngio","lesiones","procedimiento","complicacionesSala","stent","localeMap","es","locale","valuetext","value","handleChangeEdad","e","data","preventDefault","handleSubmit","event","console","log","cuadroClinico","clinicaScasest","clinicaStemi","datos_angio","form","edad","split","from","to","sexo","paciente_sexo","ingreso","antecedente_ACV","antecedente_AIT","antecedente_ATC","antecedente_CRM","antecedente_EPOC","antecedente_FA","antecedente_HTP","antecedente_IAM","antecedente_IRC","antecedente_MCPH","antecedente_feyVI","antecedente_patologia_enfermedad","antecedente_patologia_grado","antecedente_patologia_valvular","factor_riesgo_AHF","factor_riesgo_DBT","factor_riesgo_DBT_IR","factor_riesgo_DLP","factor_riesgo_Ex_TBQ","factor_riesgo_HTA","factor_riesgo_OBESIDAD","factor_riesgo_TBQ","cuadroClinico_tipo","cuadroClinico_paroCardio","cuadroClinico_shockCardio","cuadroClinico_icg","cuadroClinico_arritmiaBloqueoAv","cuadroClinico_arritmiaTvFv","cuadroClinico_tipoClaseFunc","clinicaScasest_tipoAi","clinicaScasest_grsAi","clinicaScasest_tipoNs","clinicaStemi_tipo","clinicaStemi_tipoKk","clinicaStemi_tipoAtc","clinicaStemi_diurna","angiografico_dominancia","angiografico_num_cine","angiografico_revascularizacion","angiografico_syntax","angiografico_tiempo_revascularizacion","angiografico_tipo_motivo","angiografico_tipo_procedimiento","angiografico_tronco","angiografico_vasos_enf","angiografico_vasos_tratados","lesion_angio_contralateral","lesion_balon","lesion_balon_atmosfera","lesion_balon_diametro","lesion_bifurcacion","lesion_blush_post","lesion_cto_cuerda","lesion_cto_tiempo_cruce","lesion_cutting_balon","lesion_cutting_balon_atmosfera","lesion_cutting_balon_diametro","lesion_exito_angio","lesion_fibrinoliticos","lesion_inhibidores","lesion_kissing_final","lesion_microcateter","lesion_no_reflow","lesion_postdilatacion","lesion_postdilatacion_diametro","lesion_predilatacion","lesion_proteccion_distral","lesion_recanalizacion_retrograda","lesion_rotablator","lesion_rotablator_oliva","lesion_stent","lesion_tromboaspiracion","lesion_arteria","lesion_localizacion","lesion_diam_vaso","lesion_timi_post","lesion_timi_pre","lesion_obstruccion_pre","lesion_obstruccion_post","lesion_tipo_longitud","lesion_pres_trombo","lesion_calc_severa","lesion_restenosis","lesion_angulacion","lesion_tipo_oclusion","lesion_tipo_bifurcacion","procedimiento_tipo_acceso","procedimiento_french","procedimiento_contraste","procedimiento_kerma","procedimiento_tipo_fluroscopia","stent_bare","stent_des","stent_diametro","stent_graft","stent_tipo","fields","factores_riesgo","cuadro_clinico","JSON","stringify","handleChangeAccordion","panel","newExpanded","handleInputChange","target","name","handleInputCheckedChange","checked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport enLocale from \"date-fns/locale/es\";\n\nexport default function useForm  (initialValues){\n    const [inputs,setInputs] = useState(initialValues);\n    const [paciente_edad, setPaciente_edad] = React.useState([1,100]);\n\tconst [paciente_ingreso_from, handleDateFROMchange] = React.useState(null);\n\tconst [paciente_ingreso_to,handleDateTOchange] = React.useState(null);\n\tconst [preload,setPreload] = React.useState(false);\n\tconst [clinicaStemi_tipoTiempoID,handleDateTimeChangeID] = React.useState(null)\n\tconst [clinicaStemi_tipoTiempoPC,handleDateTimeChangePC] = React.useState(null)\n\tconst [clinicaStemi_tipoTiempoLlS,handleDateTimeChangeLlS] = React.useState(null)\n\tconst [procedimiento_fecha_procedimiento, handleDateTimeChangeProcedimiento] = React.useState(null);\n    const [expanded, setExpanded] = React.useState({\n      paciente:true,\n      antecedentes:false,\n      factoresRiesgos:false,\n      clinica:false,\n      datosAngio:false,\n      lesiones:false,\n      procedimiento:false,\n      complicacionesSala:false,\n      stent:false\n      });\n      const [localeMap] = React.useState({\n        es:enLocale\n      })\n      const [locale] = React.useState(\"es\");\t\n      function valuetext(value) {\n        return value;\n        }\n        const handleChangeEdad = (e,data) => {\n      \n\t\t\tsetPaciente_edad(data);\n\t\t\te.preventDefault()\n        };\n    const handleSubmit = (event) => {\n      console.log(paciente_edad)\n\t\tpreventDefault();\n\t\t\t\n\t\tlet paciente = {};\n\t\tlet antecedentes={};\n\t\tlet factoresRiesgos = {};\n\t\tlet cuadroClinico = {};\n\t\tlet clinicaScasest = {};\n\t\tlet clinicaStemi = {};\n\t\tlet datos_angio = {};\n\t\tlet lesiones={};\n\t\tlet procedimiento = {};\n\t\tlet stent = {};\n\t\tlet form = {};\n\t\tlet edad = paciente_edad.split(\",\")\n\t\tconsole.log(edad)\n\t\tpaciente = {\n\t\t\tedad:{\n\t\t\t\tfrom: edad[0],\n\t\t\t\tto: edad[1]\n\t\t\t},\n\t\t\tsexo:inputs.paciente_sexo,\n\t\t\tingreso:{\n\t\t\t\tfrom: paciente_ingreso_from,\n\t\t\t\tto: paciente_ingreso_to\n\t\t\t}\n\t\t}\n\t\tantecedentes = {\n\t\t\tantecedente_ACV: inputs.antecedente_ACV,\n\t\t\tantecedente_AIT: inputs.antecedente_AIT,\n\t\t\tantecedente_ATC: inputs.antecedente_ATC,\n\t\t\tantecedente_CRM: inputs.antecedente_CRM,\n\t\t\tantecedente_EPOC: inputs.antecedente_EPOC,\n\t\t\tantecedente_FA: inputs.antecedente_FA,\n\t\t\tantecedente_HTP: inputs.antecedente_HTP,\n\t\t\tantecedente_IAM: inputs.antecedente_IAM,\n\t\t\tantecedente_IRC: inputs.antecedente_IRC,\n\t\t\tantecedente_MCPH: inputs.antecedente_MCPH,\n\t\t\tantecedente_feyVI: inputs.antecedente_feyVI,\n\t\t\tantecedente_patologia_enfermedad:inputs.antecedente_patologia_enfermedad,\n\t\t\tantecedente_patologia_grado: inputs.antecedente_patologia_grado,\n\t\t\tantecedente_patologia_valvular: inputs.antecedente_patologia_valvular\n\t\t}\n\n\t\tfactoresRiesgos = {\n\t\t\tfactor_riesgo_AHF: inputs.factor_riesgo_AHF,\n\t\t\tfactor_riesgo_DBT: inputs.factor_riesgo_DBT,\n\t\t\tfactor_riesgo_DBT_IR: inputs.factor_riesgo_DBT_IR,\n\t\t\tfactor_riesgo_DLP: inputs.factor_riesgo_DLP,\n\t\t\tfactor_riesgo_Ex_TBQ: inputs.factor_riesgo_Ex_TBQ,\n\t\t\tfactor_riesgo_HTA: inputs.factor_riesgo_HTA,\n\t\t\tfactor_riesgo_OBESIDAD: inputs.factor_riesgo_OBESIDAD,\n\t\t\tfactor_riesgo_TBQ: inputs.factor_riesgo_TBQ,\n\t\t}\n\t\tcuadroClinico ={\n\t\t\tcuadroClinico_tipo:inputs.cuadroClinico_tipo,\n\t\t\tcuadroClinico_paroCardio: inputs.cuadroClinico_paroCardio,\n\t\t\tcuadroClinico_shockCardio:inputs.cuadroClinico_shockCardio,\n\t\t\tcuadroClinico_icg:inputs.cuadroClinico_icg,\n\t\t\tcuadroClinico_arritmiaBloqueoAv:inputs.cuadroClinico_arritmiaBloqueoAv,\n\t\t\tcuadroClinico_arritmiaTvFv:inputs.cuadroClinico_arritmiaTvFv\n\t\t}\n\t\tif(inputs.cuadroClinico_tipo == \"1\"){\n\t\t\tcuadroClinico[\"cuadroClinico_tipoClaseFunc\"]= inputs.cuadroClinico_tipoClaseFunc\n\t\t\t\n\t\t}\n\t\tif(inputs.cuadroClinico_tipo == \"2\"){\n\t\t\tclinicaScasest = {\n\t\t\t\tclinicaScasest_tipoAi: inputs.clinicaScasest_tipoAi,\n\t\t\t\tclinicaScasest_grsAi:inputs.clinicaScasest_grsAi,\n\t\t\t\tclinicaScasest_tipoNs:inputs.clinicaScasest_tipoNs\n\n\t\t\t}\n\t\t\tcuadroClinico[\"clinicaScasest\"] = clinicaScasest\n\n\t\t}\n\t\tif(inputs.cuadroClinico_tipo == \"3\"){\n\t\t\tclinicaStemi = {\n\t\t\t\tclinicaStemi_tipo: inputs.clinicaStemi_tipo,\n\t\t\t\tclinicaStemi_tipoKk:inputs.clinicaStemi_tipoKk,\n\t\t\t\tclinicaStemi_tipoAtc:inputs.clinicaStemi_tipoAtc,\n\t\t\t\tclinicaStemi_diurna:inputs.clinicaStemi_diurna,\n\t\t\t\tclinicaStemi_tipoTiempoID:clinicaStemi_tipoTiempoID,\n\t\t\t\tclinicaStemi_tipoTiempoLlS:clinicaStemi_tipoTiempoLlS,\n\t\t\t\tclinicaStemi_tipoTiempoPC:clinicaStemi_tipoTiempoPC\n\t\t\t}\n\t\t\tcuadroClinico[\"clinicaStemi\"] = clinicaStemi\n\t\t\t\n\t\t}\n\n\t\tdatos_angio = {\n\t\t\tangiografico_dominancia: inputs.angiografico_dominancia,\n\t\t\tangiografico_num_cine: inputs.angiografico_num_cine,\n\t\t\tangiografico_revascularizacion: inputs.angiografico_revascularizacion,\n\t\t\tangiografico_syntax: inputs.angiografico_syntax,\n\t\t\tangiografico_tiempo_revascularizacion: inputs.angiografico_tiempo_revascularizacion,\n\t\t\tangiografico_tipo_motivo: inputs.angiografico_tipo_motivo,\n\t\t\tangiografico_tipo_procedimiento: inputs.angiografico_tipo_procedimiento,\n\t\t\tangiografico_tronco: inputs.angiografico_tronco,\n\t\t\tangiografico_vasos_enf: inputs.angiografico_vasos_enf,\n\t\t\tangiografico_vasos_tratados: inputs.angiografico_vasos_tratados,\n\t\t}\n\t\tlesiones= {\n\t\t\tlesion_angio_contralateral: inputs.lesion_angio_contralateral,\n\t\t\tlesion_balon: inputs.lesion_balon,\n\t\t\tlesion_balon_atmosfera: inputs.lesion_balon_atmosfera,\n\t\t\tlesion_balon_diametro: inputs.lesion_balon_diametro,\n\t\t\tlesion_bifurcacion: inputs.lesion_bifurcacion,\n\t\t\tlesion_blush_post: inputs.lesion_blush_post,\n\t\t\tlesion_cto_cuerda: inputs.lesion_cto_cuerda,\n\t\t\tlesion_cto_tiempo_cruce: inputs.lesion_cto_tiempo_cruce,\n\t\t\tlesion_cutting_balon: inputs.lesion_cutting_balon,\n\t\t\tlesion_cutting_balon_atmosfera: inputs.lesion_cutting_balon_atmosfera,\n\t\t\tlesion_cutting_balon_diametro: inputs.lesion_cutting_balon_diametro,\n\t\t\tlesion_exito_angio: inputs.lesion_exito_angio,\n\t\t\tlesion_fibrinoliticos: inputs.lesion_fibrinoliticos,\n\t\t\tlesion_inhibidores: inputs.lesion_inhibidores,\n\t\t\tlesion_kissing_final: inputs.lesion_kissing_final,\n\t\t\tlesion_microcateter: inputs.lesion_microcateter,\n\t\t\tlesion_no_reflow: inputs.lesion_no_reflow,\n\t\t\tlesion_postdilatacion: inputs.lesion_postdilatacion,\n\t\t\tlesion_postdilatacion_diametro: inputs.lesion_postdilatacion_diametro,\n\t\t\tlesion_predilatacion: inputs.lesion_predilatacion,\n\t\t\tlesion_proteccion_distral: inputs.lesion_proteccion_distral,\n\t\t\tlesion_recanalizacion_retrograda: inputs.lesion_recanalizacion_retrograda,\n\t\t\tlesion_rotablator: inputs.lesion_rotablator,\n\t\t\tlesion_rotablator_oliva: inputs.lesion_rotablator_oliva,\n\t\t\tlesion_stent: inputs.lesion_stent,\n\t\t\tlesion_tromboaspiracion: inputs.lesion_tromboaspiracion,\n\t\t\tlesion_arteria:inputs.lesion_arteria,\n\t\t\tlesion_localizacion:inputs.lesion_localizacion,\n\t\t\tlesion_diam_vaso:inputs.lesion_diam_vaso,\n\t\t\tlesion_timi_post:inputs.lesion_timi_post,\n\t\t\tlesion_timi_pre:inputs.lesion_timi_pre,\n\t\t\tlesion_obstruccion_pre:inputs.lesion_obstruccion_pre,\n\t\t\tlesion_obstruccion_post:inputs.lesion_obstruccion_post,\n\t\t\tlesion_tipo_longitud:inputs.lesion_tipo_longitud,\n\t\t\tlesion_pres_trombo:inputs.lesion_pres_trombo,\n\t\t\tlesion_calc_severa:inputs.lesion_calc_severa,\n\t\t\tlesion_restenosis:inputs.lesion_restenosis,\n\t\t\tlesion_angulacion:inputs.lesion_angulacion,\n\t\t\tlesion_tipo_oclusion:inputs.lesion_tipo_oclusion,\n\t\t\tlesion_tipo_bifurcacion:inputs.lesion_tipo_bifurcacion\n\t\t}\n\t\tprocedimiento = {\n\t\t\tprocedimiento_fecha_procedimiento:procedimiento_fecha_procedimiento,\n\t\t\tprocedimiento_tipo_acceso:inputs.procedimiento_tipo_acceso,\n\t\t\tprocedimiento_french:inputs.procedimiento_french,\n\t\t\tprocedimiento_contraste:inputs.procedimiento_contraste,\n\t\t\tprocedimiento_kerma:inputs.procedimiento_kerma,\n\t\t\tprocedimiento_tipo_fluroscopia:inputs.procedimiento_tipo_fluroscopia\n\t\t}\n\t\tstent={\n\t\t\tstent_bare: inputs.stent_bare,\n\t\t\tstent_des: inputs.stent_des,\n\t\t\tstent_diametro: inputs.stent_diametro,\n\t\t\tstent_graft: inputs.stent_graft,\n\t\t\tstent_tipo: inputs.stent_tipo\n\t\t}\n\t\tform ={\n\t\t\tfields:{\n\t\t\t\tpaciente:paciente,\n\t\t\t\tantecedentes:antecedentes,\n\t\t\t\tfactores_riesgo:factoresRiesgos,\n\t\t\t\tcuadro_clinico:cuadroClinico,\n\t\t\t\tdatos_angio : datos_angio,\n\t\t\t\tlesiones:lesiones,\n\t\t\t\tprocedimiento:procedimiento,\n\t\t\t\tstent:stent\n\t\t\t}\n\t\t}\n\n\t\tsetPreload(true);\n\n\t/* \tfetch(url, {\n            \"post\",\n            form,\n        })\n        .then(response => {\n\t\t\twindow.open(this.props.vouchersReducer.responsePrintVoucher.message, '_blank');\n\t\t\tsetPreload(false)}\n\t\t)\n */\n\t\tconsole.log(JSON.stringify(form))\n      if(event){\n        event.preventDefault();\n      }\n    }\n    const handleChangeAccordion = (panel)=>(event, newExpanded) => {\n\t\n      setExpanded({...expanded,[panel]:newExpanded})\n    };\n  \n    const handleInputChange = (event) => {\n      \n      setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n      }\n     const handleInputCheckedChange = (event) => {\n\t\t\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.checked}));\n\t\t}\n    return {\n      handleSubmit,\n     handleInputChange,\n     handleChangeAccordion,\n\t handleChangeEdad,\n\t valuetext,\n\t handleDateFROMchange,\n\t handleDateTOchange,\n\t handleInputCheckedChange,\n\t handleDateTimeChangeID,\n\t handleDateTimeChangePC,\n\t handleDateTimeChangeLlS,\n\t handleDateTimeChangeProcedimiento,\n     inputs,\n     expanded,\n     paciente_ingreso_from,\n     paciente_ingreso_to,\n     paciente_edad,\n     localeMap,\n     locale,\n\t clinicaStemi_tipoTiempoID,\n\tclinicaStemi_tipoTiempoPC,\n\tclinicaStemi_tipoTiempoLlS,\n\tprocedimiento_fecha_procedimiento,\n\tpreload\n      };\n}"]},"metadata":{},"sourceType":"module"}